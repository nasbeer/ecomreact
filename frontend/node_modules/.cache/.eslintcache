[{"/Applications/MAMP/htdocs/ecomreact/frontend/src/index.js":"1","/Applications/MAMP/htdocs/ecomreact/frontend/src/App.js":"2","/Applications/MAMP/htdocs/ecomreact/frontend/src/store.js":"3","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/LoginScreen.js":"4","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/RegisterScreen.js":"5","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/PaymentScreen.js":"6","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/HomeScreen.js":"7","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProfileScreen.js":"8","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ShippingScreen.js":"9","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/PlaceOrderScreen.js":"10","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/OrderScreen.js":"11","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/UserEditScreen.js":"12","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProductListScreen.js":"13","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/UserListScreen.js":"14","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/userReducers.js":"15","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/OrderListScreen.js":"16","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/CartScreen.js":"17","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProductEditScreen.js":"18","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/cartReducers.js":"19","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProductScreen.js":"20","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/productReducers.js":"21","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/orderReducers.js":"22","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Header.jsx":"23","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Footer.jsx":"24","/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/productActions.js":"25","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Meta.js":"26","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Paginate.js":"27","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/ProductCarousel.js":"28","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/FormContainer.js":"29","/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/cartActions.js":"30","/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/orderActions.js":"31","/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/userActions.js":"32","/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/cartConstants.js":"33","/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/productConstants.js":"34","/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/orderContstants.js":"35","/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/userConstants.js":"36","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Message.jsx":"37","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Loader.jsx":"38","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/CheckoutSteps.jsx":"39","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Product.jsx":"40","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Featured.jsx":"41","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/SearchBox.js":"42","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Rating.jsx":"43"},{"size":375,"mtime":1635158258341,"results":"44","hashOfConfig":"45"},{"size":2621,"mtime":1635158258336,"results":"46","hashOfConfig":"45"},{"size":2572,"mtime":1635158258346,"results":"47","hashOfConfig":"45"},{"size":2143,"mtime":1635158258343,"results":"48","hashOfConfig":"45"},{"size":3129,"mtime":1635158258345,"results":"49","hashOfConfig":"45"},{"size":1758,"mtime":1635158258344,"results":"50","hashOfConfig":"45"},{"size":1730,"mtime":1635158258342,"results":"51","hashOfConfig":"45"},{"size":5764,"mtime":1635158258345,"results":"52","hashOfConfig":"45"},{"size":2531,"mtime":1635158258345,"results":"53","hashOfConfig":"45"},{"size":4881,"mtime":1635158258344,"results":"54","hashOfConfig":"45"},{"size":7014,"mtime":1635158258343,"results":"55","hashOfConfig":"45"},{"size":3097,"mtime":1635158258346,"results":"56","hashOfConfig":"45"},{"size":4161,"mtime":1635158258344,"results":"57","hashOfConfig":"45"},{"size":2729,"mtime":1635158258346,"results":"58","hashOfConfig":"45"},{"size":3486,"mtime":1635158258342,"results":"59","hashOfConfig":"45"},{"size":2490,"mtime":1635158258343,"results":"60","hashOfConfig":"45"},{"size":3263,"mtime":1635158258342,"results":"61","hashOfConfig":"45"},{"size":6139,"mtime":1635158258344,"results":"62","hashOfConfig":"45"},{"size":1136,"mtime":1635158258341,"results":"63","hashOfConfig":"45"},{"size":7027,"mtime":1635158258345,"results":"64","hashOfConfig":"45"},{"size":4104,"mtime":1635158258342,"results":"65","hashOfConfig":"45"},{"size":3257,"mtime":1635158258342,"results":"66","hashOfConfig":"45"},{"size":2586,"mtime":1635158258338,"results":"67","hashOfConfig":"45"},{"size":546,"mtime":1635159164897,"results":"68","hashOfConfig":"45"},{"size":4673,"mtime":1635158258336,"results":"69","hashOfConfig":"45"},{"size":477,"mtime":1635158258338,"results":"70","hashOfConfig":"45"},{"size":751,"mtime":1635158258338,"results":"71","hashOfConfig":"45"},{"size":1226,"mtime":1635158258339,"results":"72","hashOfConfig":"45"},{"size":336,"mtime":1635158258338,"results":"73","hashOfConfig":"45"},{"size":1218,"mtime":1635158258336,"results":"74","hashOfConfig":"45"},{"size":4507,"mtime":1635158258336,"results":"75","hashOfConfig":"45"},{"size":5869,"mtime":1635158258336,"results":"76","hashOfConfig":"45"},{"size":238,"mtime":1635158258340,"results":"77","hashOfConfig":"45"},{"size":1520,"mtime":1635158258340,"results":"78","hashOfConfig":"45"},{"size":1203,"mtime":1635158258340,"results":"79","hashOfConfig":"45"},{"size":1560,"mtime":1635158258340,"results":"80","hashOfConfig":"45"},{"size":244,"mtime":1635158258338,"results":"81","hashOfConfig":"45"},{"size":371,"mtime":1635158258338,"results":"82","hashOfConfig":"45"},{"size":1332,"mtime":1635158258337,"results":"83","hashOfConfig":"45"},{"size":888,"mtime":1635158258339,"results":"84","hashOfConfig":"45"},{"size":1562,"mtime":1635158258337,"results":"85","hashOfConfig":"45"},{"size":955,"mtime":1635158258339,"results":"86","hashOfConfig":"45"},{"size":1872,"mtime":1635158258339,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"smsvrn",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"90"},"/Applications/MAMP/htdocs/ecomreact/frontend/src/index.js",[],["190","191"],"/Applications/MAMP/htdocs/ecomreact/frontend/src/App.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/store.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/LoginScreen.js",["192"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>Register</Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/RegisterScreen.js",["193"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>Login</Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/PaymentScreen.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/HomeScreen.js",["194"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport { listProducts } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\n\nimport Meta from \"../components/Meta\";\nimport { Link } from \"react-router-dom\";\nimport Featured from \"../components/Featured\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { products, page, pages, error, loading } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n\n      {!keyword ? (\n        // <ProductCarousel />\n        <Featured />\n      ) : (\n        <Link to=\"/\" type=\"button\" className=\"btn btn-light\">\n          GO Back\n        </Link>\n      )}\n      <h1>New Launches</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant={\"danger\"}>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate pages={pages} page={page} keyword={keyword ? keyword : \"\"} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProfileScreen.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ShippingScreen.js",["195"],"import React, { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const dispatch = useDispatch();\n\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const [address, setAddress] = useState(shippingAddress.address);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter city\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postal\">\n          <Form.Label>Postal Code </Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter country \"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter address \"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/PlaceOrderScreen.js",["196"],"import React, { useEffect } from \"react\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createOrder } from \"../actions/orderActions\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { Link } from \"react-router-dom\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const addDecimal = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  //Calculate Prices\n  cart.itemsPrice = addDecimal(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  cart.shippingPrice = addDecimal(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimal(Number((0.15 * cart.itemsPrice).toFixed(2)));\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  console.log(\"I am in placeorder\");\n  console.log(cart);\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success]);\n\n  const placeOrderHandler = (e) => {\n    console.log(cart);\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.postalCode}, ,{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your Cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image src={item.image} alt={item.name} fluid rounded />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x &#x20b9;{item.price} = &#x20b9;{item.price * item.qty}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"fluid\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>&#x20b9;{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>&#x20b9;{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>&#x20b9;{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>&#x20b9;{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/OrderScreen.js",["197"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deliverOrder, getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from \"../constants/orderContstants\";\n\nconst OrderScreen = ({ history, match }) => {\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const addDecimal = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  if (!loading) {\n    order.itemsPrice = addDecimal(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n\n    order.shippingPrice = addDecimal(order.itemsPrice > 100 ? 0 : 100);\n    order.taxPrice = addDecimal(Number((0.15 * order.itemsPrice).toFixed(2)));\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      console.log(clientId);\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [successPay, orderId, dispatch, order, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name:</strong> {order.user.name}{\" \"}\n              </p>\n              <p>\n                <strong>Email:</strong>\n                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.postalCode}, ,{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\"> Delivered On {order.deliveredAt}</Message>\n              ) : (\n                <Message variant=\"danger\"> Not Delivered </Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid On {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\"> Not paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Your Cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image src={item.image} alt={item.name} fluid rounded />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>{item.name}</Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x &#x20b9;{item.price} = &#x20b9;{item.price * item.qty}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"fluid\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>&#x20b9;{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>&#x20b9;{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>&#x20b9;{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>&#x20b9;{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button type=\"button\" className=\"btn btn-block\" onClick={deliverHandler}>\n                    Mark as Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/UserEditScreen.js",["198","199","200","201","202","203"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, register, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, user, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to={\"/admin/userlist\"} className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n\n        {loadingUpdate ? (\n          <Loader />\n        ) : errorUpdate ? (\n          <Message variant=\"danger\">{errorUpdate}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isAdmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProductListScreen.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/UserListScreen.js",["204"],"import React, { useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/\");\n    }\n  }, [dispatch, history, successDelete]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure ?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\"> {error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Admin</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto: ${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    className=\"btn-sm\"\n                    variant=\"danger\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/userReducers.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/OrderListScreen.js",["205"],"import React, { useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listOrders } from \"../actions/orderActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/\");\n    }\n  }, [dispatch, history]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\"> {error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/CartScreen.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProductEditScreen.js",["206"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setCategory(product.category);\n        setBrand(product.brand);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        countInStock,\n        description,\n        category,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        header: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n      console.log(data);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <Link to={\"/admin/productlist\"} className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                label=\"image\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}>\n                {uploading && <Loader />}\n              </Form.File>\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                label=\"brand\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>countInStock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                label=\"category\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                label=\"description\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/cartReducers.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ProductScreen.js",["207"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Container, Image, ListGroup, Row, Card, Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"../components/Rating\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductDetails, createProductReview } from \"../actions/productActions\";\n\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport Meta from \"../components/Meta\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { error, loading, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const { error: errorProductReview, success: successProductReview } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert(\"Review Submitted!\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandle = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(match.params.id, { rating, comment }));\n  };\n\n  return (\n    <>\n      <Link to=\"/\" type=\"button\" className=\"btn btn-dark my-3\">\n        GO Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6} style={{ textAlign: \"center\" }}>\n              <Image src={product.image} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating value={product.rating} text={`${product.numReview} reviews`} />\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <strong>Price: &#x20b9;{product.price}</strong>\n                </ListGroup.Item>\n                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>&#x20b9;{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>{product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map((x) => (\n                              <option key={x + 1}>{x + 1}</option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandle}\n                      className=\"btn-block\"\n                      disabled={product.countInStock === 0}\n                      type=\"button\"\n                    >\n                      Add to Card\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews </h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a customer review</h2>\n                  {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/productReducers.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/reducers/orderReducers.js",["208"],"import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_RESET,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderContstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { loading: true };\n\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_PAY_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return { loading: true };\n\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { loading: true };\n\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { loading: true };\n\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.DELIVERload,\n      };\n\n    case ORDER_DELIVER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Header.jsx",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Footer.jsx",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/productActions.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Meta.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Paginate.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/ProductCarousel.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/FormContainer.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/cartActions.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/orderActions.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/actions/userActions.js",["209","210"],"import axios from \"axios\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderContstants\";\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_RESET,\n  USER_LOGOUT,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_SUCCESS,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\"api/users/login\", { email, password }, config);\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: USER_REGISTER_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\"api/users\", { name, email, password }, config);\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`api/users/profile`, user, config);\n\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/users\", config);\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({ type: USER_DETAILS_SUCCESS });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/cartConstants.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/productConstants.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/orderContstants.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/constants/userConstants.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Message.jsx",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Loader.jsx",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/CheckoutSteps.jsx",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Product.jsx",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Featured.jsx",["211"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport \"../App.css\";\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n  const productTopRated = useSelector((state) => state.productTopRated);\n\n  const { loading, error, products } = productTopRated;\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\"> {error}</Message>\n  ) : (\n    <>\n      <h2 style={{ textAlign: \"center\" }}>Sale is live🚀</h2>\n      <div className=\"topRated\">\n        <div className=\"featured\">\n          <Link to={`/search/${products[0]?.brand}`}>\n            <Image src={products[0]?.image} alt={products[0]?.name} />\n          </Link>\n\n          {/* <Image src=\"/images/sony_sales.jpg\" /> */}\n        </div>\n        <div className=\"topProducts\">\n          {products.map((product) =>\n            product?.name === products[0]?.name ? (\n              \"\"\n            ) : (\n              <div className=\"topProduct\">\n                <Link to={`/search/${product?.brand}`}>\n                  <Image src={product?.image} alt={product?.name} height=\"270px\" />\n                </Link>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProductCarousel;\n","/Applications/MAMP/htdocs/ecomreact/frontend/src/components/SearchBox.js",[],"/Applications/MAMP/htdocs/ecomreact/frontend/src/components/Rating.jsx",["212"],"import React from \"react\";\nimport { propTypes } from \"react-bootstrap/esm/Image\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <>\n      <span>\n        {value >= 1 ? (\n          <i style={{ color }} className=\"fas fa-star\"></i>\n        ) : value >= 0.5 ? (\n          <i style={{ color }} className=\"fas fa-star-half-alt\"></i>\n        ) : (\n          <i style={{ color }} className=\"far fa-star\"></i>\n        )}\n      </span>\n      <span>\n        {value >= 2 ? (\n          <i style={{ color }} className=\"fas fa-star\"></i>\n        ) : value >= 1.5 ? (\n          <i style={{ color }} className=\"fas fa-star-half-alt\"></i>\n        ) : (\n          <i style={{ color }} className=\"far fa-star\"></i>\n        )}\n      </span>\n      <span>\n        {value >= 3 ? (\n          <i style={{ color }} className=\"fas fa-star\"></i>\n        ) : value >= 2.5 ? (\n          <i style={{ color }} className=\"fas fa-star-half-alt\"></i>\n        ) : (\n          <i style={{ color }} className=\"far fa-star\"></i>\n        )}\n      </span>\n      <span>\n        {value >= 4 ? (\n          <i style={{ color }} className=\"fas fa-star\"></i>\n        ) : value >= 3.5 ? (\n          <i style={{ color }} className=\"fas fa-star-half-alt\"></i>\n        ) : (\n          <i style={{ color }} className=\"far fa-star\"></i>\n        )}\n      </span>\n      <span>\n        {value >= 5 ? (\n          <i style={{ color }} className=\"fas fa-star\"></i>\n        ) : value >= 4.5 ? (\n          <i style={{ color }} className=\"fas fa-star-half-alt\"></i>\n        ) : (\n          <i style={{ color }} className=\"far fa-star\"></i>\n        )}\n      </span>\n      <span>{text}</span>\n    </>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\n// Rating.propTypes = {\n//   color: PropTypes.string,\n//   value: PropTypes.number.isRequired,\n//   text: PropTypes.string.isRequired,\n// };\n\nexport default Rating;\n",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":2,"column":16,"nodeType":"219","messageId":"220","endLine":2,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":2,"column":16,"nodeType":"219","messageId":"220","endLine":2,"endColumn":24},{"ruleId":"217","severity":1,"message":"221","line":9,"column":8,"nodeType":"219","messageId":"220","endLine":9,"endColumn":23},{"ruleId":"217","severity":1,"message":"222","line":2,"column":18,"nodeType":"219","messageId":"220","endLine":2,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":39,"column":6,"nodeType":"225","endLine":39,"endColumn":24,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":71,"column":6,"nodeType":"225","endLine":71,"endColumn":60,"suggestions":"228"},{"ruleId":"217","severity":1,"message":"229","line":7,"column":26,"nodeType":"219","messageId":"220","endLine":7,"endColumn":34},{"ruleId":"217","severity":1,"message":"230","line":16,"column":10,"nodeType":"219","messageId":"220","endLine":16,"endColumn":17},{"ruleId":"217","severity":1,"message":"231","line":16,"column":19,"nodeType":"219","messageId":"220","endLine":16,"endColumn":29},{"ruleId":"217","severity":1,"message":"232","line":21,"column":11,"nodeType":"219","messageId":"220","endLine":21,"endColumn":18},{"ruleId":"217","severity":1,"message":"233","line":21,"column":20,"nodeType":"219","messageId":"220","endLine":21,"endColumn":25},{"ruleId":"223","severity":1,"message":"234","line":39,"column":6,"nodeType":"225","endLine":39,"endColumn":50,"suggestions":"235"},{"ruleId":"223","severity":1,"message":"236","line":26,"column":6,"nodeType":"225","endLine":26,"endColumn":40,"suggestions":"237"},{"ruleId":"223","severity":1,"message":"236","line":23,"column":6,"nodeType":"225","endLine":23,"endColumn":25,"suggestions":"238"},{"ruleId":"217","severity":1,"message":"239","line":9,"column":10,"nodeType":"219","messageId":"220","endLine":9,"endColumn":27},{"ruleId":"217","severity":1,"message":"222","line":2,"column":15,"nodeType":"219","messageId":"220","endLine":2,"endColumn":24},{"ruleId":"217","severity":1,"message":"240","line":19,"column":3,"nodeType":"219","messageId":"220","endLine":19,"endColumn":19},{"ruleId":"217","severity":1,"message":"241","line":202,"column":13,"nodeType":"219","messageId":"220","endLine":202,"endColumn":17},{"ruleId":"217","severity":1,"message":"241","line":232,"column":13,"nodeType":"219","messageId":"220","endLine":232,"endColumn":17},{"ruleId":"217","severity":1,"message":"242","line":7,"column":10,"nodeType":"219","messageId":"220","endLine":7,"endColumn":18},{"ruleId":"217","severity":1,"message":"243","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":19},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ProductCarousel' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["247"],"'register' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["248"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["249"],["250"],"'USER_UPDATE_RESET' is defined but never used.","'ORDER_LIST_RESET' is defined but never used.","'data' is assigned a value but never used.","'Carousel' is defined but never used.","'propTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [history, order._id, success]",{"range":"261","text":"262"},"Update the dependencies array to be: [successPay, orderId, dispatch, order, successDeliver, userInfo, history]",{"range":"263","text":"264"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"269","text":"270"},[1263,1281],"[history, order._id, success]",[2461,2515],"[successPay, orderId, dispatch, order, successDeliver, userInfo, history]",[1407,1451],"[user, userId, successUpdate, history, dispatch]",[885,919],"[dispatch, history, successDelete, userInfo]",[768,787],"[dispatch, history, userInfo]"]