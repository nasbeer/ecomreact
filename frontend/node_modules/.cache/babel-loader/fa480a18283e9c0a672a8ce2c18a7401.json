{"ast":null,"code":"import _slicedToArray from\"/Applications/MAMP/htdocs/ecomreact/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Col,Form}from\"react-bootstrap\";import FormContainer from\"../components/FormContainer\";import{useDispatch,useSelector}from\"react-redux\";import{savePaymentMethod}from\"../actions/cartActions\";import CheckoutSteps from\"../components/CheckoutSteps\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push(\"/shipping\");}var dispatch=useDispatch();var _useState=useState(\"Paypal\"),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push(\"/placeorder\");};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"Paypal\",name:\"paymentMethod\",value:\"PayPal\",onChange:function onChange(e){return setPaymentMethod(e.target.value);},checked:true}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Stripe\",id:\"Stripe\",name:\"paymentMethod\",value:\"Stripe\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Button","Col","Form","FormContainer","useDispatch","useSelector","savePaymentMethod","CheckoutSteps","PaymentScreen","history","cart","state","shippingAddress","push","dispatch","paymentMethod","setPaymentMethod","handleSubmit","e","preventDefault","target","value"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,IAAtB,KAAkC,iBAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,iBAAT,KAAkC,wBAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACrC,GAAMC,CAAAA,IAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADqC,GAE7BE,CAAAA,eAF6B,CAETF,IAFS,CAE7BE,eAF6B,CAIrC,GAAI,CAACA,eAAL,CAAsB,CACpBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACD,CAED,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CARqC,cAUKL,QAAQ,CAAC,QAAD,CAVb,wCAU9BgB,aAV8B,eAUfC,gBAVe,eAYrC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAL,QAAQ,CAACR,iBAAiB,CAACS,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACI,IAAR,CAAa,aAAb,EACD,CAJD,CAMA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAEE,sCAFF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEI,YAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADF,cAEE,MAAC,GAAD,yBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,uBAFR,CAGE,EAAE,CAAC,QAHL,CAIE,IAAI,CAAC,eAJP,CAKE,KAAK,CAAC,QALR,CAME,QAAQ,CAAE,kBAACC,CAAD,QAAOF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANZ,CAOE,OAAO,KAPT,EADF,cAUE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,QAFR,CAGE,EAAE,CAAC,QAHL,CAIE,IAAI,CAAC,eAJP,CAKE,KAAK,CAAC,QALR,CAME,QAAQ,CAAE,kBAACH,CAAD,QAAOF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANZ,EAVF,GAFF,GADF,cAwBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAxBF,GAHF,GADF,CAkCD,CApDD,CAsDA,cAAeb,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Col, Form } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  const dispatch = useDispatch();\n\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"Paypal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n              checked\n            ></Form.Check>\n            <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n"]},"metadata":{},"sourceType":"module"}