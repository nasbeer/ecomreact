{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { productDetailsReducer, productListReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  cart: cartReducer,\n  //Product Reducers\n  productList: productListReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDetails: productDetailsReducer,\n  productTopRated: productTopRatedReducer,\n  productReviewCreate: productReviewCreateReducer,\n  //User Reducers\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userDetails: userDetailsReducer,\n  userRegister: userRegisterReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  //Order Reducers\n  orderPay: orderPayReducer,\n  orderList: orderListReducer,\n  orderListMy: orderListMyReducer,\n  orderCreate: orderCreateReducer,\n  orderDeliver: orderDeliverReducer,\n  orderDetails: orderDetailsReducer\n});\nconst middlewares = [thunk];\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ecomreact/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","thunk","productDetailsReducer","productListReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userDeleteReducer","userDetailsReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","userUpdateReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","cart","productList","productDelete","productCreate","productUpdate","productDetails","productTopRated","productReviewCreate","userLogin","userList","userDelete","userUpdate","userDetails","userRegister","userUpdateProfile","orderPay","orderList","orderListMy","orderCreate","orderDeliver","orderDetails","middlewares","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","store"],"mappings":"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","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport {\n  productDetailsReducer,\n  productListReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDeleteReducer,\n  userDetailsReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderPayReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  cart: cartReducer,\n  //Product Reducers\n  productList: productListReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDetails: productDetailsReducer,\n  productTopRated: productTopRatedReducer,\n  productReviewCreate: productReviewCreateReducer,\n  //User Reducers\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userDetails: userDetailsReducer,\n  userRegister: userRegisterReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  //Order Reducers\n  orderPay: orderPayReducer,\n  orderList: orderListReducer,\n  orderListMy: orderListMyReducer,\n  orderCreate: orderCreateReducer,\n  orderDeliver: orderDeliverReducer,\n  orderDetails: orderDetailsReducer,\n});\n\nconst middlewares = [thunk];\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\n  : null;\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}