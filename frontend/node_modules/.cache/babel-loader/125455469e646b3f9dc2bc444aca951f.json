{"ast":null,"code":"import _slicedToArray from\"/Applications/MAMP/htdocs/ecomreact/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Container,Form}from\"react-bootstrap\";import FormContainer from\"../components/FormContainer\";import{useDispatch,useSelector}from\"react-redux\";import{saveShippingAddress}from\"../actions/cartActions\";import CheckoutSteps from\"../components/CheckoutSteps\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState(shippingAddress.city),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState(shippingAddress.postalCode),_useState4=_slicedToArray(_useState3,2),postalCode=_useState4[0],setPostalCode=_useState4[1];var _useState5=useState(shippingAddress.country),_useState6=_slicedToArray(_useState5,2),country=_useState6[0],setCountry=_useState6[1];var _useState7=useState(shippingAddress.address),_useState8=_slicedToArray(_useState7,2),address=_useState8[0],setAddress=_useState8[1];var handleSubmit=function handleSubmit(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push(\"/payment\");};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,placeholder:\"Enter city\",value:city,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postal\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,placeholder:\"Enter Postal Code\",value:postalCode,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,placeholder:\"Enter country \",value:country,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",required:true,placeholder:\"Enter address \",value:address,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Submit\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ecomreact/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Button","Container","Form","FormContainer","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","ShippingScreen","history","cart","state","shippingAddress","dispatch","city","setCity","postalCode","setPostalCode","country","setCountry","address","setAddress","handleSubmit","e","preventDefault","push","target","value"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,IAA5B,KAAwC,iBAAxC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,mBAAT,KAAoC,wBAApC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACtC,GAAMC,CAAAA,IAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADsC,GAE9BE,CAAAA,eAF8B,CAEVF,IAFU,CAE9BE,eAF8B,CAGtC,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAHsC,cAKdL,QAAQ,CAACa,eAAe,CAACE,IAAjB,CALM,wCAK/BA,IAL+B,eAKzBC,OALyB,8BAMFhB,QAAQ,CAACa,eAAe,CAACI,UAAjB,CANN,yCAM/BA,UAN+B,eAMnBC,aANmB,8BAORlB,QAAQ,CAACa,eAAe,CAACM,OAAjB,CAPA,yCAO/BA,OAP+B,eAOtBC,UAPsB,8BAQRpB,QAAQ,CAACa,eAAe,CAACQ,OAAjB,CARA,yCAQ/BA,OAR+B,eAQtBC,UARsB,eAUtC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAX,QAAQ,CAACP,mBAAmB,CAAC,CAAEc,OAAO,CAAPA,OAAF,CAAWN,IAAI,CAAJA,IAAX,CAAiBE,UAAU,CAAVA,UAAjB,CAA6BE,OAAO,CAAPA,OAA7B,CAAD,CAApB,CAAR,CACAT,OAAO,CAACgB,IAAR,CAAa,UAAb,EACD,CAJD,CAMA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,EADF,cAEE,gCAFF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEH,YAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,mBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,KAFV,CAGE,WAAW,CAAC,YAHd,CAIE,KAAK,CAAER,IAJT,CAKE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,OAAO,CAACQ,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd,EALZ,EAFF,GADF,cAYE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,QAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,2BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,KAFV,CAGE,WAAW,CAAC,mBAHd,CAIE,KAAK,CAAEX,UAJT,CAKE,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,aAAa,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAApB,EALZ,EAFF,GAZF,cAsBE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,sBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,KAFV,CAGE,WAAW,CAAC,gBAHd,CAIE,KAAK,CAAET,OAJT,CAKE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,UAAU,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAjB,EALZ,EAFF,GAtBF,cAgCE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,sBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,KAFV,CAGE,WAAW,CAAC,gBAHd,CAIE,KAAK,CAAEP,OAJT,CAKE,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,UAAU,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAjB,EALZ,EAFF,GAhCF,cA2CE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,oBA3CF,GAHF,GADF,CAqDD,CArED,CAuEA,cAAenB,CAAAA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const dispatch = useDispatch();\n\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const [address, setAddress] = useState(shippingAddress.address);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter city\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postal\">\n          <Form.Label>Postal Code </Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter country \"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Enter address \"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}